Zylitics Browser Test Build Runner (zl-btbr) is a Restful api at zylitics that can run previously compiled browser tests on
newly provisioned cloud servers.

Deploying:

1. Run all type of tests locally

2. Local deployment:
- mvn clean package -DskipTest=true

3. Cloud deployment (replace #VERSION#):
3.1:
jar_ver=#VERSION# && app=zl-btbr && jar=$app-$jar_ver.jar \
&& cd ~/documents/zylitics/$app && mvn clean package -DskipTest=true \
&& cd ~/documents/zylitics/all-assets/releases && rm -f $jar \
&& cp ~/documents/zylitics/$app/target/$jar . \
&& zip -j $app-$jar_ver.zip $jar && rm -f $jar \
&& gsutil cp $app-$jar_ver.zip gs://zl-release-artifact
3.2:
Update project level metadata to mark the current btbr version
gcloud compute project-info add-metadata --metadata zl-btbr-latest-version=#VERSION#
3.3:
When new version comes, we can just delete running instances so that when we create new and they
start, they download the new version. Terminated instances won't need to be deleted as when they
start, they download new.
If some instances are running, we will take down all running servers (irrespective to whether they're
always running or on demand instance), and label is-deleting=true those are currently running
some test. Once done we will maintain number of always running and on-demand instances by starting
new once (Just like our deployer script does). A script will need to be created for this.

Running:
1. Local run (replace #VERSION#):
java -noverify -XX:+AlwaysPreTouch -Xms512m \
-Dwebdriver.chrome.driver=/Users/praveentiwari/.chrome-driver/chromedriver \
-Dwebdriver.gecko.driver=/Users/praveentiwari/.firefox-driver/geckodriver \
-Djava.awt.headless=false \
-Dspring.http.log-request-details=true \
-jar target/zl-btbr-#VERSION#.jar --spring.profiles.active=e2e \
--spring.config.location=classpath:/application.properties,classpath:/application.yaml --debug

2. Cloud production run (replace all constants with valid values):
java -noverify -XX:+AlwaysPreTouch -Xms512m -D<driver_system_property>=<driver's_server_path> -Djava.awt.headless=false -jar <path_to_downloaded_jar> <project_level_options> <instance_level_options>
# Place for adding properties we need to access as-is without converting them into java objects and
# using placeholders, @Value annotations or Environment. This saves us from loading yaml properties
# file into Environment.
app-short-version=beta

spring.jmx.enabled=false

# Keep the banner for now to help debug.
# spring.main.banner-mode=off

# all actuator properties and artifact from pom removed, as we may not need those endpoints for this
# api being it gets into existence only when asked to.

spring.profiles.active=production

server.port=8080
# Maximum queue length for incoming connection requests when all possible request processing threads are in use.
server.tomcat.accept-count=1
# Enables access log of tomcat
server.tomcat.accesslog.enabled=false
# Can also change thread pool, request size etc if needed.

# TODO: regularly watch for 'positive matches and unconditional classes' and exclude those not
#   required. These class names are taken from:
#   spring-boot-autoconfigure-<version>.jar!/META-INF/spring.factories
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, \
  org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\
  org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration,\
  org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,\
  org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,\
  org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\
  org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration